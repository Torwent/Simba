{$assertions on}

procedure Test;
var
  img: TImage;
  p: TPointArray;
begin
  img := new TImage;
  img.FromString('IMG:AQAAANEAAADFAAAAAAAAABAAAAAAAAAAEAWGAAEAAAAw4z8BAAAAAPAEWwkAAAAA8ARbCQAAAADwBFsJAAAAACipegABAAAAAQAAANEAAADFAAAAIAAAAAAAAAAAAAAAAAAAAAMAAAAgCBAICAgACBgBAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiVBORw0KGgoAAAANSUhEUgAAANEAAADFCAIAAABFH4A1AAADcElEQVR4nO3asXIUQRBEQf3/T0MEGHLEcje3U93bk+kvqGueoSD4+gIA4I9fl6p/OibSHDnXtWXKU/xZNEfO67XtK6BD8eRojpy12u4toOrvpYbmSNMcaZojTXOkaY40zZGmOdI0R5rmqNHh1dV2Fs1Ro8Orq+0smqOGVydNcwAAAAAA/fm3XNI0d78Zm+644vrPfOJKXcxYU3Pdvb5m52X3XTFjn15mbLrvihn7dLG2Zrdld1/x3GU62v1aGbuveO4yHe1+rYzdVzx3mY52v1bG7iueu0wvn79Th30zVzxrk74yrzXjimdt0lfmtWZc8axN+sq81owrnrVJX5nXmnRF/zW6S77WjCv6r9Fd8rUmXdFzh2fIv9aMK3ru8Az513LF6Wa81owrzjLjnWZccYoZrzXjilPMeK2qK/ov01HVa92r6or+y/SVfKd9MlfM2KrejB0zV8zYqpe3tms79I4f7L3Kmg3S2lurtZ14xw/2Xl/NBpngwKE1V+zAoTVX5sC5P69tzBQ1Dhxac8UOHFpzxQ4cWnPFDhxac8UOHFpzxQ4cWnPFDhxac8UOHFpzxQ4cWnMtHDix2oodOLTmWjhqYs21cNTEmqOG2kjT3OlqX1pnJ9IcOdfv7e25n+bIeb025XEPzZGmOdI0R5rmSNMcaZojTXOkaY40zVFDbaRpjhpqI01zAAAAAAAAAADwFP63D2maI+e6NuVxP82R83ptyuMemiNNcxn2/Ka5DHt+09w+tv2ZXfax7c/sssPaqqcsbJEdNHfFIjto7opFdtDc/9niLp/XdsraVriL5t5z+v130Nx7Tr//DpojTXOkaY40zZGmOdI0R5rmqKE20jRHmuZI0xw11Eaa5qikM9I0BwAAn/E7NWmaI+e6NuVxP82R83ptyuMemiNNc6RpjjTNkaY50jRHmuZI0xxpmqOG2kjTHDXURprmAAAO5RdBFi2nozkWLaRz/Yny+KfldDTHooV0Xv9EeTeaMO9yOssf8okJ8y6ns/wha+aMvJzO8oesmTPycjrLH/KuaVMv3zNtiMamTb18z7QhGps29fI904ZobNrUy/dMG6KxaVMv3zNtiMamTf3hPRMmaO/DN2pq+ZI5EzT2fm9PGPzDS559fHszm/tr+YYJxzemOWpMq43+NEcNtZGmOQAAAIDb/Aaa5yAeVYBvqgAAAABJRU5ErkJggg==');

  p := img.FindColor($FFFFFF, 0);
  Assert(Length(p.Cluster(1,1)) = 14);
  Assert(Length(p.Cluster(200,1)) = 5);
  Assert(Length(p.Cluster(9)) = 9);
  Assert(Length(p.Cluster(1,200)) = 5);
end;

procedure TestDiagonal;
var
  p: TPointArray;
begin
  p := [[3,3],[1,0],[2,0],[0,1],[0,2],[3,1]];
  // Cluster falls back to split TPA for small arrays, so just duplicate a point to bypass this
  for 1 to 1500 do p += [3,3];
  Assert(Length(p.Cluster(1, 5)) = 3);
  Assert(Length(p.Cluster(1.5, 5)) = 1);

  p := [[3,3],[1,0],[2,0],[0,1],[0,2],[3,1]];
  Assert(Length(p.Split(1, 5)) = 3);
  Assert(Length(p.Split(1.5, 5)) = 1);
end;

begin
  Test();
  TestDiagonal();
end;
